services:
#    m_russo_lib.example:
#        class: MRusso\LibBundle\Example
#        arguments: ["@service_id", "plain_value", %parameter%]
#Model Principal DB
    db:
        class: MRusso\LibBundle\Service\DB
        calls:
        - [ setEntityManager, [ '@doctrine.orm.entity_manager' ] ]
#        - [ setMongoEntityManager, [ '@doctrine_mongodb' ] ]
        - [ setRequest, [ '@request_stack'] ]
        - [ setContainer, ['@service_container']]

    mrusso.kernel.exception_listener:
        class: MRusso\LibBundle\Service\ExceptionListener
        arguments: ['@templating','@service_container']
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }
#Modelos
    mrusso.user:
        class: MRusso\LibBundle\Model\User
        parent: db
    routes:
        class: MRusso\LibBundle\Model\Route
        parent: db
    role:
        class: MRusso\LibBundle\Model\Role
        parent: db
    post:
        class: MRusso\LibBundle\Model\Post
        parent: db
    acl:
        class: MRusso\LibBundle\Model\Acl
        calls:
        - [ setRequest, [ '@request_stack'] ]
        - [ setContainer, ['@service_container']]
# Twig Extensions
    paginator:
        class: MRusso\LibBundle\Twig\Paginator
        arguments: [ "@router","@request_stack","@service_container"]
        tags:
            - { name: twig.extension }
#            - { name: twig.extension}
    params:
        class: MRusso\LibBundle\Twig\Params
        arguments: ["@service_container"]
        tags:
            - { name: twig.extension }
    counter:
        class: MRusso\LibBundle\Twig\Counter
        arguments: ["@service_container"]
        tags:
            - { name: twig.extension }
